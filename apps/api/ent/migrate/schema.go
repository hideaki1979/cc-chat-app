// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatRoomsColumns holds the columns for the "chat_rooms" table.
	ChatRoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "is_group_chat", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ChatRoomsTable holds the schema information for the "chat_rooms" table.
	ChatRoomsTable = &schema.Table{
		Name:       "chat_rooms",
		Columns:    ChatRoomsColumns,
		PrimaryKey: []*schema.Column{ChatRoomsColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "file_url", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "room_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_chat_rooms_messages",
				Columns:    []*schema.Column{MessagesColumns[6]},
				RefColumns: []*schema.Column{ChatRoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "messages_users_messages",
				Columns:    []*schema.Column{MessagesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "message_room_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[6], MessagesColumns[3]},
			},
		},
	}
	// RoomMembersColumns holds the columns for the "room_members" table.
	RoomMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "joined_at", Type: field.TypeTime},
		{Name: "room_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// RoomMembersTable holds the schema information for the "room_members" table.
	RoomMembersTable = &schema.Table{
		Name:       "room_members",
		Columns:    RoomMembersColumns,
		PrimaryKey: []*schema.Column{RoomMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "room_members_chat_rooms_room_members",
				Columns:    []*schema.Column{RoomMembersColumns[2]},
				RefColumns: []*schema.Column{ChatRoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "room_members_users_room_members",
				Columns:    []*schema.Column{RoomMembersColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "roommember_room_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{RoomMembersColumns[2], RoomMembersColumns[3]},
			},
			{
				Name:    "roommember_user_id",
				Unique:  false,
				Columns: []*schema.Column{RoomMembersColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeBytes},
		{Name: "profile_image_url", Type: field.TypeString, Nullable: true},
		{Name: "bio", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "refresh_token_hash", Type: field.TypeBytes, Unique: true, Nullable: true},
		{Name: "refresh_token_expires_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatRoomsTable,
		MessagesTable,
		RoomMembersTable,
		UsersTable,
	}
)

func init() {
	MessagesTable.ForeignKeys[0].RefTable = ChatRoomsTable
	MessagesTable.ForeignKeys[1].RefTable = UsersTable
	RoomMembersTable.ForeignKeys[0].RefTable = ChatRoomsTable
	RoomMembersTable.ForeignKeys[1].RefTable = UsersTable
}
